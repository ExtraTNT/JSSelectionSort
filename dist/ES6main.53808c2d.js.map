{"version":3,"sources":["scripts/ES6main.js"],"names":["countOfValues","sleepTime","BORDER_SORT_DIV_DIV","BUFFER","MAX_VALUE_OF_NUMBER","window","innerWidth","INVISIBLE","SORT_DIV_DIV_ARRAY","BUTTON_SIZE","TABLE_CLASS","startDiv","document","getElementById","inputFieldsDiv","startButton","sortDiv","reloadButton","mainText","toggle","element","classList","reload","open","close","draw","arr","i","length","style","width","Sleep","milliseconds","Promise","resolve","setTimeout","Selection_Sort","compare","a","b","min","index","temp","j","console","log","setup","setButtonHeight","btns","getElementsByTagName","btn","height","createInputFields","br","createElement","class","id","type","value","Math","random","toFixed","append","setupSortDiv","borderWidth","add","push","innerHeight","askInt","message","tmp","parseInt","prompt","Number","isInteger","alert","textContent","start","getAllValues","allValues","children","validateUserInput","int","startArray","addEventListener"],"mappings":"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","file":"ES6main.53808c2d.js","sourceRoot":"../src","sourcesContent":["\"use strict\";\nlet countOfValues = 150;\nlet sleepTime = 10;\nconst BORDER_SORT_DIV_DIV = 1;\nconst BUFFER = 16;\nconst MAX_VALUE_OF_NUMBER = window.innerWidth - BORDER_SORT_DIV_DIV - BUFFER;\nconst INVISIBLE = \"invisible\";\nconst SORT_DIV_DIV_ARRAY = [];\nconst BUTTON_SIZE = 25;\nconst TABLE_CLASS = \"tabled\";\n\nconst startDiv = document.getElementById('startView');\nconst inputFieldsDiv = document.getElementById('inputFields');\nconst startButton = document.getElementById('startButton');\nconst sortDiv = document.getElementById('sortView');\nconst reloadButton = document.getElementById('reloadButton');\nconst mainText = document.getElementById('mainText');\n\nconst toggle = function(element){\n  element.classList.toggle(INVISIBLE);\n};\nconst reload = function(){ //dirty way\n  window.open('./index.html');\n  window.close();\n};\nconst draw = function(arr){\n  for (var i = 0; i < SORT_DIV_DIV_ARRAY.length; i++) {\n    SORT_DIV_DIV_ARRAY[i].style.width = (arr[i] + \"px\");\n  }\n};\nconst Sleep = function(milliseconds) {\n   return new Promise(resolve => setTimeout(resolve, milliseconds));\n};\n// Selection sort with O(n^2) time complexity\nasync function Selection_Sort(arr) { //can't use const async function -> giu stops working\n\n  const compare = function(a, b) {\n    return a - b; // use b - a; for reverse sorting\n  };\n  let min = 0;\n  let index = 0;\n  let temp = 0;\n  for (let i = 0; i < arr.length; i += 1) {\n    index = i;\n    min = arr[i];\n    for (let j = i + 1; j < arr.length; j += 1) {\n      if (compare(min, arr[j]) > 0) {\n        min = arr[j];\n        index = j;\n\n        await Sleep(sleepTime);\n        draw(arr);\n      }\n    }\n    temp = arr[i];\n    arr[i] = min;\n    arr[index] = temp;\n  }\n  console.log(arr); //logs the final array in the consol\n  draw(arr); //final draw\n  return arr;\n}\n\nconst setup = function(){\n  const setButtonHeight = function(){\n    let btns = document.getElementsByTagName('button');\n    for (let btn of btns) {\n      btn.style.height = BUTTON_SIZE + \"px\";\n    }\n  };\n  const createInputFields = function(){\n    for (var i = 1; i <= countOfValues; i++) {\n      let br = document.createElement('br');\n      br.class = \"br\";\n      let element = document.createElement('input');\n      element.id = \"in\" + i;\n      element.type = 'number';\n      element.value = (Math.random()*MAX_VALUE_OF_NUMBER).toFixed();\n      inputFieldsDiv.append(br);\n      inputFieldsDiv.append(element);\n    }\n  };\n  const setupSortDiv = function(){\n    for (var i = 1; i <= countOfValues; i++) {\n      let element = document.createElement('div');\n      element.id = \"div\" + i;\n\n      element.style.borderWidth = BORDER_SORT_DIV_DIV + \"px\";\n      element.classList.add(TABLE_CLASS);\n\n      SORT_DIV_DIV_ARRAY.push(element);\n      element.style.height = ((((window.innerHeight -\n        (countOfValues * (BORDER_SORT_DIV_DIV * 2)) - (BUTTON_SIZE + BUFFER)) /\n        countOfValues)) + \"px\");\n      sortDiv.append(element);\n    }\n  };\n  const askInt = function(message, value){\n    let tmp = parseInt(prompt(message, value));\n    if(!Number.isInteger(tmp)){\n      alert(tmp + \" is not a number \" + value + \" is chosen!\");\n      tmp = value;\n    }\n    return tmp;\n  };\n  /*The Setp*/\n  countOfValues = askInt(\"How many values?: \", countOfValues);\n  sleepTime = askInt(\"How fast? (Sleep in ms): \", sleepTime);\n  mainText.textContent = \"Enter \" + countOfValues + \" values to sort:\";\n  createInputFields();\n  setupSortDiv();\n  setButtonHeight();\n  toggle(startDiv);\n};\nconst start = function(){\n  const getAllValues = function(){\n    let allValues = [];\n    for (var element of inputFieldsDiv.children) {\n      if(element.class != \"br\"){\n        allValues.push(validateUserInput(element.value));\n      }\n    }\n    return  allValues;\n  };\n  const validateUserInput = function(value){\n    let int = parseInt(value);\n    if(int > MAX_VALUE_OF_NUMBER || !Number.isInteger(int)){\n      alert(\"Found an invalid value (to high or not a number)! Instead this value a random number is chosen\");\n      int = parseInt((Math.random()*MAX_VALUE_OF_NUMBER).toFixed());\n    }\n    return int;\n  };\n  /*The start of the sorting process*/\n  const startArray = getAllValues();\n  draw(startArray);\n  toggle(startDiv);\n  toggle(sortDiv);\n  Selection_Sort(startArray);\n};\n/*Code: */\nsetup();\nstartButton.addEventListener('click', start);\nreloadButton.addEventListener('click', reload);\n"]}